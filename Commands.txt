!ahcache - application compatibility cache
!alignmentfaults  - type alignment faults
!apc - display an asynchronous procedure call
	!apc proc Process
	!apc thre Thread
	!apc KAPC
!apicerr [format]- display the local programmable interrupt controller error log
	0x0 - chronological
	0x1 - by processor
!arbinst {Address} [flags] - display an arbiter
	0x100 - display aliases
!arbiter [flags] - display resource arbiters and arbitrated ranges
!bcb {Address} - display the buffer control block
!blockeddrv - display a list of blocked drivers
!bpid [options] PID - requests the debugger to break into a process remotely
	-a Attaches a new user mode debugger
	-s Adds a breakpoint before the action
	-w stores the request in memory on remote computer
!bugdump - displays the bug check callback data
!bushnd - display Hardware bus handlers
!ca [Address | 0 | -1] [Flags] - display control area information
	0 - all control areas
	-1 - unused segment list 
	0x1 - Display segment information.
	0x2 - Display subsection information.
	0x4 - Display the list of mapped views. (Windows 7 and later)
	0x8 - Display compact (single line) output.
	0x10 - Display file-backed control areas.
	0x20 - Display control areas backed by the page file.
	0x40 - Display image control areas.
!callback {Address} [Number] - display the callback data related to the trap for the thread
	The callback frame number
!calldata Table - display procedure call statistics from the named table
!can_write_dump - verifies there's enough space to dump the kernel on a remote host
!cbreg [%%]Address - display cardbus socket registers
		%% - physical address vs virtual
!cchelp - help on cache manager extensions
!chklowmem - check memory > 4Gb when booted with /pae or /nolowmem options
!cmreslist {Address} - display CM_Resource_List structure
!cpuinfo [processor] - display info about a CPU
!db [Caching] [-m] [PhysicalAddress] [L Size] 
!dc [Caching] [-m] [PhysicalAddress] [L Size] 
!dd [Caching] [-m] [PhysicalAddress] [L Size] 
!dp [Caching] [-m] [PhysicalAddress] [L Size] 
!dq [Caching] [-m] [PhysicalAddress] [L Size] 
!du [Caching] [-m] [PhysicalAddress] [L Size] 
!dw [Caching] [-m] [PhysicalAddress] [L Size] 
	caching - surround in square brackets, 
		c - read from cached memory
		uc - read from uncached memory
		wc - read from write combined memory
	-m  - read one unit at a time
	L - the number of chunks of memory to display
		db - ascii 128 bytes
		dc - 32 dwords and ascii
		dd - 32 dwords
		dp - ulong pointers 32/64 bit 128 bytes
		dq - ulong pointers 64 bit 128 bytes
		du - 16 unicode characters
		dw - word values, 64 dwords 128 bytes
!dbgprint - display a string sent to DbgPrint buffer
!dblink Address [Count] [Bias] - display a linked list backwards
!dflink Address [Count] [Bias] - display a linked list forwards	
	count - number of entries
	bias - number of bits to ignore preceding entries
!deadlock - display deadlock detections from driver verifier
!defwrites - display kernel variables from cache manager
!devext {Address} [TypeCode]- display bus specific device extension information
		TypeCode - ISAPNP, PCMCIA, HID
!devhandles {Address}- display open handles for a specified device
!devnode {Address} [Verbosity] {Service}- display information about a node in the device tree
!devobj {DeviceObject} - display information about a device
!devstack - display device stack associated with a device object
!diskspace {Drive:} - display free space
!dma {Address} [Verbosity] - display direct memory access information
!dpa - display pool allocation information
!dpcs [Processor] - display deferred procedure call information for a processor
!driveinfo {Drive:}- display disk information
!drvobj DriverObject - display devices attached to a driver
!dskheap [-v] [-s SessionID] - display desktop session heap information
	-v - verbose
!eb [Flag] PhysicalAddress Data [ ... ] 
!ed [Flag] PhysicalAddress Data [ ... ]
		c - write to cached memory
		uc - write to uncached memory
		wc - write to write combined memory
!ec Bus.Device.Function Offset Data
		Bus can range from 0 to 0xFF.
		Slot device number for the device.
		Slot function number for the device.
		The offset for the address at which to write.
!errlog - display any pending entries in the I/O system error log
!errpkt {Address} - displays a windows hardware error packets info
!errec {Address} - display a windows hardware error record
!exca BasePort.SocketNumber - display PC-Card interrupt registers
!filecache [flags] - display file system cache memory and page table entry use
!filelock {Address} - display a file lock structure
!fileobj {Address} - display information on a file object
!filetime {Time} - convert a 64bit filetime into human readable time
!finddata {Address} {Offset} - display data in an object at an offset
!findfilelockowner {Address} - find the owner of a file object lock
!findthreads [-v][-t  <Thread Address>|-i <IRP Address>|-d <Device Address>|( -a <Pointer Address> -e <End Address> | -l <Range Length>)]
!for_each_process ["command string"] - loop a command to each process
!for_each_thread ["command string"] - loop a command to each thread
!fpsearch {Address} - searches the freed pool for an address
!frozen - displays the state of each frozen processor
!fxdevice - display information about power management devices
!gbl [-v Verbose] - display Root System Description Table
!gentable {Address} [Flag] - display a runtime library generic table
	Flag: 1 - AVL Table is used
	Flag: 0 - non-AVL Table is used
!hidppd {Address} - display HIDP_Preparsed_Data structure
ib, id, iw - input from port command
!icpleak [Flag] - examines all I/O completion objects for the longest queue
		Handle Flag: if set displays processes with a handle to the object
!idt [option]- display interrupt service routines from an interrupt dispatch table
		IDT - specifies the IDT to display
		blank - gives a summary of all IDT's
		-a - displays verbose information
!ih [Processor] - displays interrupt history for a processor
!ioresdes {Address} - display an IO_Resource_Descriptor
!ioctldecode IoctlCode - displays Device Type, Required Access specified by an IO Control Code from !irp
!ioreslist {Address}- displays an IO_Resource_List structure
!iovirp {Address} - displays information about an IO verifier IO request packet from Driver Verifier
!ipi - display interprocessor interrupt information
!irp {Address} [1]- display information about an IO request packet 
	Detail: 1 - if included the output contains owning thread, memory descriptor and stack info
!irpfind [-v][PoolType[RestartAddress[CriteriaData]]] - display information about all IO request packets
!irql [Processor]- display the interrupt request level of a processor
!isainfo [Card] - display info about PNPISA devices in the system
	Card - if omitted, all devices are displayed
!job [Process [Flags]]- displays a job object
	Process - The address of the job object
	Flag: 0x1 - display job settings and statistics
	Flag: 0x2 - display list of all processes in the job
kb, kv - display stack backtrace command
!loadermemorylist ListHeadAddress - display the memory allocation list that windows bootloader passes to windows
!lockedpages [Process] - display driver locked pages for a specified process
!locks - display information about kernel EResource locks
!logonsession LUID - display information about a specified logon session
!lookaside - displays information about lookaside lists
!mca - diplay the machine check architecture registers
!memlist Flag- scans the physical memory lists from the page frame number database to check consistency
	Flag: 0x1 - zeroed pages list is verified
!memusage Flag - display memory usage information
	Flag: 0x0 - displays a detailed description of pages in page frame number database
	Flag: 0x1 - summary about modified no-write pages in page frame number database
	Flag: 0x2 - details about modified no-write pages in page frame number database
	Flag: 0x8 - general summary about memory use
!mps {Address} - display bios information for the intel multiprocessor specification, requires HAL symbols
!mtrr - display the contents of the MTRR register
!npx Address - display the contents of the floating point register save area
ob, od, ow - output to port command
!object {Path/Name/Address} [Flag] {-p} - display information about a system object
	-p - display private object namespaces
	Flag: 0x0 - display object type
	Flag: 0x1 - type, name and reference counts
	Flag: 0x8 - contents of directory or target of symbolic link
	Flag: 0x10 - display object headers
	Flag: 0x20 - display full path to object
!obtrace {pointer} - display object reference tracing data
!openmaps {Address}  - display referenced buffer control blocks and virtual address control blocks for shared cache map
!pat - display page attribute table registers for a processor
!pci - displays the status of the PCI buses and devices attached to those buses
!pciir - displays the contents of the hardware routing of PCI devices to interrupt controller inputs
!pcitree - display information about pci device objects
!pfn {PageFrame} - dispay information about a specific page frame or the entire page frame da
!powertriage - display power summary and device power related components
!pnpevent - display a tree of all device events in the queue
!pocaps - display power capabilities of target computer
!pool {Address} - display information about specific pool allocation or system wide pool
	Address: -1 - display information about all heaps in the process
	Address: 0 - display information about the process heap
